#pragma once

struct MItem				// Тип данных одного элемента меню
{
	char *Text;				// Текст команды элемента меню
	int Length;				// Длина текста элемента меню
	int Pos;				// Координата Х положения на экране текста элемента меню
};

struct Menu					// Тип данных Menu
{
	int X,					// Координата Х верхнего левого угла меню
		Y,					// Координата Y верхнего левого угла меню
		CCount,				// Количество столбцов меню
		TabType;			// Вид линий сетки меню (0 - одиночные; 1 - двойные)
	bool Horizont;			// True - горизонтальное меню: False - вертикальное
	int Item;				// Номер выбранной команды меню (начинается с 0)
	short NormColors,		// Цветовые аттрибуты не выбранных ячеек (см. MyCrt)
		  SelectColors;		// Цветовые аттрибуты выбранной ячейки (см. MyCrt)
	MItem *Items;			// Массив строк команд меню
	int MenuWidth,			// Служебное поле - ширина меню на экране
	    MenuHeight;			// Служебное поле - высота меню на экране
	char *Buf;				// Указатель на буфер для сохранения изображения под меню
};

void InitMenu(				// Инициализация параметров меню Т
	Menu &T,				// Переменная для меню
	int X, int Y,			// Координаты Х и Y верхнего левого угла меню
	int TabType,			// Вид линий сетки меню (0 - одиночные; 1 - двойные)
	bool Horizont,			// True - горизонтальное меню: False - вертикальное
	short NormColors,		// Цветовые аттрибуты не выбранных команд (см. MyCrt)
	short SelectColors,		// Цветовые аттрибуты выбранной команды (см. MyCrt)
	int n, int m,			// Размерности двумерного массива Data[n][m]
	char *Data
	);

void HideMenu(Menu T, short Colors);					// Стереть меню с экрана цветом Colors
void Show_Menu(Menu T);									// Показать меню на экране		
void FreeMenu(Menu &T, short Colors);					// Уничтожить меню в памяти и на экране
void DrawEmptyMenu(Menu T);								// Нарисовать меню без команд на экране
void FillMenu(Menu T);									// Заполнить меню командами из массива команд
bool ItemChoice(Menu &T);								// Выбор команды меню
